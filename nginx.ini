# You may add here your
# server {
#       ...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
server {
  listen         ec2-52-192-120-42.ap-northeast-1.compute.amazonaws.com:8001; 
 location / {
    proxy_pass       http://127.0.0.1:8001/;
    proxy_set_header Host ec2-52-192-120-42.ap-northeast-1.compute.amazonaws.com:8001;
 }
}

server {
  listen         ec2-52-192-120-42.ap-northeast-1.compute.amazonaws.com:8002;
 location / {
    proxy_pass       http://127.0.0.1:8002/;
    proxy_set_header Host ec2-52-192-120-42.ap-northeast-1.compute.amazonaws.com:8002;
 }
}

upstream backend_hosts {
    server ec2-13-113-191-119.ap-northeast-1.compute.amazonaws.com:8001;
    server ec2-13-113-191-119.ap-northeast-1.compute.amazonaws.com:8002;
}


server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	root /usr/share/nginx/html;
	index index.html index.htm;
	
	#AWS Domain Name or localhost
	
	server_name ec2-52-192-120-42.ap-northeast-1.compute.amazonaws.com;
	#server_name localhost;
	location / {
			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			try_files $uri $uri/ =404;
			# Uncomment to enable naxsi on this location
			# include /etc/nginx/naxsi.rules
    } 

    location /images {
	        root /home/ubuntu/static/;
			try_files $uri $uri/ =404;
    }



	location /app {
			proxy_http_version 1.1;
			proxy_redirect off;
			proxy_buffering off;
			proxy_pass http://backend_hosts/;
	}
}
